package main

import (
	"encoding/json"	//added to work with json
	"fmt"
)

type AutoGenerated struct {	//created using json to go converter
	Quiz struct {
		Sport struct {
			Q1 struct {
				Question string   `json:"question"`
				Options  []string `json:"options"`
				Answer   string   `json:"answer"`
			} `json:"q1"`
		} `json:"sport"`
		Maths struct {
			Q1 struct {
				Question string   `json:"question"`
				Options  []string `json:"options"`
				Answer   string   `json:"answer"`
			} `json:"q1"`
			Q2 struct {
				Question string   `json:"question"`
				Options  []string `json:"options"`
				Answer   string   `json:"answer"`
			} `json:"q2"`
		} `json:"maths"`
	} `json:"quiz"`
}

func main() {

	s := `{	// ` is important to accept all as a string
    "quiz": {
        "sport": {
            "q1": {
                "question": "Which one is correct team name in NBA?",
                "options": [
                    "New York Bulls",
                    "Los Angeles Kings",
                    "Golden State Warriros",
                    "Huston Rocket"
                ],
                "answer": "Huston Rocket"
            }
        },
        "maths": {
            "q1": {
                "question": "5 + 7 = ?",
                "options": [
                    "10",
                    "11",
                    "12",
                    "13"
                ],
                "answer": "12"
            },
            "q2": {
                "question": "12 - 8 = ?",
                "options": [
                    "1",
                    "2",
                    "3",
                    "4"
                ],
                "answer": "4"
            }
        }
    }
}`	//end of json with ` sign

	var samplStruct AutoGenerated 			//created and empty struct to pass its pointer to Unmarshal
	bs := []byte(s)					//Unmarshal works with byte slices. Therefore, string is converted to a byte slice.
	err := json.Unmarshal(bs, &samplStruct)		//Unmarshal takes byte slice and pointer of the struct
	fmt.Println(err)
	fmt.Println(samplStruct.Quiz.Maths.Q2.Answer)	//point notation can be used to access Quiz > Maths > Q2 > Answer value. Q and A must be capital.

}
